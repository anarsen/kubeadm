---
- name: Upload certificates so they are fresh and not expired
  command: >-
    kubeadm init phase
    --config={{ kubeadm_config_path }}
    upload-certs
    --upload-certs
  register: kubeadm_upload_cert
  when:
  - inventory_hostname == first_kube_control_plane

- name: Parse certificate key if not set
  set_fact:
    kubeadm_certificate_key: "{{ hostvars[groups['kube_control_plane'][0]]['kubeadm_upload_cert'].stdout_lines[-1] | trim }}"
  run_once: yes
  when:
  - hostvars[groups['kube_control_plane'][0]]['kubeadm_upload_cert'] is defined
  - hostvars[groups['kube_control_plane'][0]]['kubeadm_upload_cert'] is not skipped

- name: Create kubeadm ControlPlane config
  template:
    src: kubeadm-joinconfig.yaml.j2
    dest: "{{ kube_config_dir }}/kubeadm-joinconfig.yaml"
    mode: 0640
    backup: yes
  when:
  - inventory_hostname != first_kube_control_plane
  - not kubeadm_already_run.stat.exists

- name: Wait for K8s apiserver
  wait_for:
    host: "{{ kube_apiserver_loadbalancer_fqdn }}"
    port: 443
    timeout: 180

- name: Reset cert directory
  shell: >-
    if [ -f {{ kube_config_dir }}/manifests/kube-apiserver.yaml ]; then
    kubeadm reset -f --cert-dir {{ kube_cert_dir }};
    fi
  when:
    - inventory_hostname != first_kube_control_plane
    - kubeadm_already_run is not defined or not kubeadm_already_run.stat.exists

- name: Join control plane node to cluster
  command: >-
    kubeadm join
    --config {{ kube_config_dir }}/kubeadm-joinconfig.yaml
    --ignore-preflight-errors=all
  register: kubeadm_join_control_plane
  retries: 3
  throttle: 1
  until: kubeadm_join_control_plane is succeeded
  when:
    - inventory_hostname != first_kube_control_plane
    - kubeadm_already_run is not defined or not kubeadm_already_run.stat.exists
